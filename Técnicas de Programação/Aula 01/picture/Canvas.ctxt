#BlueJ class context
comment0.target=class\ Canvas
comment0.text=\nCanvas\ is\ a\ class\ to\ allow\ for\ simple\ graphical\ drawing\ on\ a\ canvas.\nThis\ is\ a\ modification\ of\ the\ general\ purpose\ Canvas,\ specially\ made\ for\nthe\ BlueJ\ "shapes"\ example.\ \n\n@author\:\ Bruce\ Quig\n@author\:\ Michael\ Kolling\ (mik)\n\n@version\:\ 1.6\ (shapes)\n\n
comment1.target=objects
comment10.target=graphic
comment11.params=g
comment11.target=void\ paint(Graphics)
comment12.target=canvasSingleton
comment13.params=title\ width\ height\ bgColour
comment13.target=Canvas(String,int,int,Color)
comment13.text=\nCreate\ a\ Canvas.\n@param\ title\ \ title\ to\ appear\ in\ Canvas\ Frame\n@param\ width\ \ the\ desired\ width\ for\ the\ canvas\n@param\ height\ \ the\ desired\ height\ for\ the\ canvas\n@param\ bgClour\ \ the\ desired\ background\ colour\ of\ the\ canvas\n\n
comment14.target=shapes
comment15.params=milliseconds
comment15.target=void\ wait(int)
comment15.text=\nWait\ for\ a\ specified\ number\ of\ milliseconds\ before\ finishing.\nThis\ provides\ an\ easy\ way\ to\ specify\ a\ small\ delay\ which\ can\ be\nused\ when\ producing\ animations.\n@param\ \ milliseconds\ \ the\ number\ \n\n
comment16.params=
comment16.target=void\ redraw()
comment16.text=\nRedraw\ ell\ shapes\ currently\ on\ the\ Canvas.\n\n
comment17.params=visible
comment17.target=void\ setVisible(boolean)
comment17.text=\nSet\ the\ canvas\ visibility\ and\ brings\ canvas\ to\ the\ front\ of\ screen\nwhen\ made\ visible.\ This\ method\ can\ also\ be\ used\ to\ bring\ an\ already\nvisible\ canvas\ to\ the\ front\ of\ other\ windows.\n@param\ visible\ \ boolean\ value\ representing\ the\ desired\ visibility\ of\nthe\ canvas\ (true\ or\ false)\ \n\n
comment18.target=canvasImage
comment19.target=backgroundColour
comment2.params=
comment2.target=Canvas\ getCanvas()
comment2.text=\nFactory\ method\ to\ get\ the\ canvas\ singleton\ object.\n\n
comment20.params=colorString
comment20.target=void\ setForegroundColor(String)
comment20.text=\nSet\ the\ foreground\ colour\ of\ the\ Canvas.\n@param\ \ newColour\ \ \ the\ new\ colour\ for\ the\ foreground\ of\ the\ Canvas\ \n\n
comment21.params=referenceObject
comment21.target=void\ erase(Object)
comment21.text=\nErase\ a\ given\ shape's\ from\ the\ screen.\n@param\ \ referenceObject\ \ the\ shape\ object\ to\ be\ erased\ \n\n
comment22.params=
comment22.target=void\ erase()
comment22.text=\nErase\ the\ whole\ canvas.\ (Does\ not\ repaint.)\n\n
comment3.params=graphic
comment3.target=void\ draw(Graphics2D)
comment4.target=colorString
comment5.target=shape
comment6.params=shape\ color
comment6.target=ShapeDescription(Shape,String)
comment7.target=canvas
comment8.params=referenceObject\ color\ shape
comment8.target=void\ draw(Object,String,Shape)
comment8.text=\nDraw\ a\ given\ shape\ onto\ the\ canvas.\n@param\ \ referenceObject\ \ an\ object\ to\ define\ identity\ for\ this\ shape\n@param\ \ color\ \ \ \ \ \ \ \ \ \ \ \ the\ color\ of\ the\ shape\n@param\ \ shape\ \ \ \ \ \ \ \ \ \ \ \ the\ shape\ object\ to\ be\ drawn\ on\ the\ canvas\n\n
comment9.target=frame
numComments=23
